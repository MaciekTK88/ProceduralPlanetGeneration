#include "/Engine/Public/Platform.ush"
#include "GenerationUtilities.usf"
#include "TerrainShader.usf"


//------------------------------------------------------------------------------
//Main compute shader entry point.
[numthreads(16, 16, 1)]
void PlanetComputeShader(
    uint3 DispatchThreadID : SV_DispatchThreadID,
    uint GroupIndex : SV_GroupIndex)
{
    
    int verticesAmount = (chunkQuality + 1);
    if (DispatchThreadID.x >= verticesAmount || DispatchThreadID.y >= verticesAmount)
        return;

    float3 planetPos = GetVertexPosition(DispatchThreadID);
    float3 normalizedPlanetPos = normalize(planetPos);
    planetPos = normalizedPlanetPos * planetRadius;

    
    TerrainData terrainData = GetTerrainData(planetPos, normalizedPlanetPos);

    

    WritePlanetData(DispatchThreadID, normalizedPlanetPos, terrainData);

}